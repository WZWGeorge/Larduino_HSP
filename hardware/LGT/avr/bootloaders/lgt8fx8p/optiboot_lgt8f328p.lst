
optiboot_lgt8f328p.elf：     文件格式 elf32-avr

节：
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000077ec  00000460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .bootv        00000004  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY
  2 .text         000003ec  00007400  00007400  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .version      00000002  000077fe  000077fe  00000464  2**0
                  CONTENTS, READONLY
  4 .stab         00001080  00000000  00000000  00000468  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000dd0  00000000  00000000  000014e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  000022b8  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00007400 <main>:
    7400:	11 24       	eor	r1, r1
    7402:	8f ef       	ldi	r24, 0xFF	; 255
    7404:	98 e0       	ldi	r25, 0x08	; 8
    7406:	9e bf       	out	0x3e, r25	; 62
    7408:	8d bf       	out	0x3d, r24	; 61
    740a:	84 b7       	in	r24, 0x34	; 52
    740c:	14 be       	out	0x34, r1	; 52
    740e:	81 ff       	sbrs	r24, 1
    7410:	bc c1       	rjmp	.+888    	; 0x778a <main+0x38a>
    7412:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__TEXT_REGION_LENGTH__+0x7e0066>
    7416:	86 30       	cpi	r24, 0x06	; 6
    7418:	08 f4       	brcc	.+2      	; 0x741c <main+0x1c>
    741a:	b4 c1       	rjmp	.+872    	; 0x7784 <main+0x384>
    741c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__TEXT_REGION_LENGTH__+0x7e0066>
    7420:	86 50       	subi	r24, 0x06	; 6
    7422:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__TEXT_REGION_LENGTH__+0x7e0066>
    7426:	80 e8       	ldi	r24, 0x80	; 128
    7428:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    742c:	93 e9       	ldi	r25, 0x93	; 147
    742e:	90 93 f2 00 	sts	0x00F2, r25	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    7432:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    7436:	91 e0       	ldi	r25, 0x01	; 1
    7438:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    743c:	86 bf       	out	0x36, r24	; 54
    743e:	8c e4       	ldi	r24, 0x4C	; 76
    7440:	86 bf       	out	0x36, r24	; 54
    7442:	85 e0       	ldi	r24, 0x05	; 5
    7444:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    7448:	82 e0       	ldi	r24, 0x02	; 2
    744a:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    744e:	88 e1       	ldi	r24, 0x18	; 24
    7450:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    7454:	90 e1       	ldi	r25, 0x10	; 16
    7456:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    745a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    745e:	8d e0       	ldi	r24, 0x0D	; 13
    7460:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    7464:	25 9a       	sbi	0x04, 5	; 4
    7466:	86 e0       	ldi	r24, 0x06	; 6
    7468:	40 e3       	ldi	r20, 0x30	; 48
    746a:	5c ef       	ldi	r21, 0xFC	; 252
    746c:	31 e0       	ldi	r19, 0x01	; 1
    746e:	20 e2       	ldi	r18, 0x20	; 32
    7470:	50 93 85 00 	sts	0x0085, r21	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    7474:	40 93 84 00 	sts	0x0084, r20	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7478:	36 bb       	out	0x16, r19	; 22
    747a:	b0 9b       	sbis	0x16, 0	; 22
    747c:	fe cf       	rjmp	.-4      	; 0x747a <main+0x7a>
    747e:	95 b1       	in	r25, 0x05	; 5
    7480:	92 27       	eor	r25, r18
    7482:	95 b9       	out	0x05, r25	; 5
    7484:	a8 95       	wdr
    7486:	81 50       	subi	r24, 0x01	; 1
    7488:	99 f7       	brne	.-26     	; 0x7470 <main+0x70>
    748a:	00 e0       	ldi	r16, 0x00	; 0
    748c:	10 e0       	ldi	r17, 0x00	; 0
    748e:	21 2c       	mov	r2, r1
    7490:	31 2c       	mov	r3, r1
    7492:	21 01       	movw	r4, r2
    7494:	ee 24       	eor	r14, r14
    7496:	e3 94       	inc	r14
    7498:	32 e0       	ldi	r19, 0x02	; 2
    749a:	f3 2e       	mov	r15, r19
    749c:	43 e0       	ldi	r20, 0x03	; 3
    749e:	74 2e       	mov	r7, r20
    74a0:	54 ea       	ldi	r21, 0xA4	; 164
    74a2:	c5 2e       	mov	r12, r21
    74a4:	62 ea       	ldi	r22, 0xA2	; 162
    74a6:	d6 2e       	mov	r13, r22
    74a8:	16 c0       	rjmp	.+44     	; 0x74d6 <main+0xd6>
    74aa:	82 34       	cpi	r24, 0x42	; 66
    74ac:	11 f1       	breq	.+68     	; 0x74f2 <main+0xf2>
    74ae:	85 34       	cpi	r24, 0x45	; 69
    74b0:	19 f1       	breq	.+70     	; 0x74f8 <main+0xf8>
    74b2:	85 35       	cpi	r24, 0x55	; 85
    74b4:	49 f1       	breq	.+82     	; 0x7508 <main+0x108>
    74b6:	86 35       	cpi	r24, 0x56	; 86
    74b8:	11 f1       	breq	.+68     	; 0x74fe <main+0xfe>
    74ba:	84 36       	cpi	r24, 0x64	; 100
    74bc:	09 f4       	brne	.+2      	; 0x74c0 <main+0xc0>
    74be:	35 c0       	rjmp	.+106    	; 0x752a <main+0x12a>
    74c0:	84 37       	cpi	r24, 0x74	; 116
    74c2:	09 f4       	brne	.+2      	; 0x74c6 <main+0xc6>
    74c4:	b0 c0       	rjmp	.+352    	; 0x7626 <main+0x226>
    74c6:	85 37       	cpi	r24, 0x75	; 117
    74c8:	09 f4       	brne	.+2      	; 0x74cc <main+0xcc>
    74ca:	02 c1       	rjmp	.+516    	; 0x76d0 <main+0x2d0>
    74cc:	81 35       	cpi	r24, 0x51	; 81
    74ce:	29 f1       	breq	.+74     	; 0x751a <main+0x11a>
    74d0:	71 d1       	rcall	.+738    	; 0x77b4 <verifySpace>
    74d2:	80 e1       	ldi	r24, 0x10	; 16
    74d4:	5c d1       	rcall	.+696    	; 0x778e <putch>
    74d6:	62 d1       	rcall	.+708    	; 0x779c <getch>
    74d8:	81 34       	cpi	r24, 0x41	; 65
    74da:	39 f7       	brne	.-50     	; 0x74aa <main+0xaa>
    74dc:	5f d1       	rcall	.+702    	; 0x779c <getch>
    74de:	c8 2f       	mov	r28, r24
    74e0:	69 d1       	rcall	.+722    	; 0x77b4 <verifySpace>
    74e2:	c2 38       	cpi	r28, 0x82	; 130
    74e4:	71 f0       	breq	.+28     	; 0x7502 <main+0x102>
    74e6:	c1 38       	cpi	r28, 0x81	; 129
    74e8:	09 f4       	brne	.+2      	; 0x74ec <main+0xec>
    74ea:	ff c0       	rjmp	.+510    	; 0x76ea <main+0x2ea>
    74ec:	83 e0       	ldi	r24, 0x03	; 3
    74ee:	4f d1       	rcall	.+670    	; 0x778e <putch>
    74f0:	f0 cf       	rjmp	.-32     	; 0x74d2 <main+0xd2>
    74f2:	84 e1       	ldi	r24, 0x14	; 20
    74f4:	6b d1       	rcall	.+726    	; 0x77cc <getNch>
    74f6:	ed cf       	rjmp	.-38     	; 0x74d2 <main+0xd2>
    74f8:	85 e0       	ldi	r24, 0x05	; 5
    74fa:	68 d1       	rcall	.+720    	; 0x77cc <getNch>
    74fc:	ea cf       	rjmp	.-44     	; 0x74d2 <main+0xd2>
    74fe:	84 e0       	ldi	r24, 0x04	; 4
    7500:	65 d1       	rcall	.+714    	; 0x77cc <getNch>
    7502:	80 e0       	ldi	r24, 0x00	; 0
    7504:	44 d1       	rcall	.+648    	; 0x778e <putch>
    7506:	e5 cf       	rjmp	.-54     	; 0x74d2 <main+0xd2>
    7508:	49 d1       	rcall	.+658    	; 0x779c <getch>
    750a:	08 2f       	mov	r16, r24
    750c:	47 d1       	rcall	.+654    	; 0x779c <getch>
    750e:	10 e0       	ldi	r17, 0x00	; 0
    7510:	18 2b       	or	r17, r24
    7512:	00 0f       	add	r16, r16
    7514:	11 1f       	adc	r17, r17
    7516:	4e d1       	rcall	.+668    	; 0x77b4 <verifySpace>
    7518:	dc cf       	rjmp	.-72     	; 0x74d2 <main+0xd2>
    751a:	88 e1       	ldi	r24, 0x18	; 24
    751c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    7520:	8c e0       	ldi	r24, 0x0C	; 12
    7522:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    7526:	46 d1       	rcall	.+652    	; 0x77b4 <verifySpace>
    7528:	d4 cf       	rjmp	.-88     	; 0x74d2 <main+0xd2>
    752a:	38 d1       	rcall	.+624    	; 0x779c <getch>
    752c:	c8 2f       	mov	r28, r24
    752e:	36 d1       	rcall	.+620    	; 0x779c <getch>
    7530:	8c 2e       	mov	r8, r28
    7532:	91 2c       	mov	r9, r1
    7534:	98 2c       	mov	r9, r8
    7536:	88 24       	eor	r8, r8
    7538:	88 0e       	add	r8, r24
    753a:	91 1c       	adc	r9, r1
    753c:	2f d1       	rcall	.+606    	; 0x779c <getch>
    753e:	68 2e       	mov	r6, r24
    7540:	54 01       	movw	r10, r8
    7542:	c0 e0       	ldi	r28, 0x00	; 0
    7544:	d1 e0       	ldi	r29, 0x01	; 1
    7546:	2a d1       	rcall	.+596    	; 0x779c <getch>
    7548:	89 93       	st	Y+, r24
    754a:	21 e0       	ldi	r18, 0x01	; 1
    754c:	a2 1a       	sub	r10, r18
    754e:	b1 08       	sbc	r11, r1
    7550:	d1 f7       	brne	.-12     	; 0x7546 <main+0x146>
    7552:	11 bc       	out	0x21, r1	; 33
    7554:	12 bd       	out	0x22, r17	; 34
    7556:	82 b5       	in	r24, 0x22	; 34
    7558:	86 95       	lsr	r24
    755a:	86 95       	lsr	r24
    755c:	b2 01       	movw	r22, r4
    755e:	a1 01       	movw	r20, r2
    7560:	08 2e       	mov	r0, r24
    7562:	04 c0       	rjmp	.+8      	; 0x756c <main+0x16c>
    7564:	76 95       	lsr	r23
    7566:	67 95       	ror	r22
    7568:	57 95       	ror	r21
    756a:	47 95       	ror	r20
    756c:	0a 94       	dec	r0
    756e:	d2 f7       	brpl	.-12     	; 0x7564 <main+0x164>
    7570:	40 fd       	sbrc	r20, 0
    7572:	04 c0       	rjmp	.+8      	; 0x757c <main+0x17c>
    7574:	36 e4       	ldi	r19, 0x46	; 70
    7576:	63 16       	cp	r6, r19
    7578:	09 f4       	brne	.+2      	; 0x757c <main+0x17c>
    757a:	e7 c0       	rjmp	.+462    	; 0x774a <main+0x34a>
    757c:	1b d1       	rcall	.+566    	; 0x77b4 <verifySpace>
    757e:	35 e4       	ldi	r19, 0x45	; 69
    7580:	63 16       	cp	r6, r19
    7582:	09 f4       	brne	.+2      	; 0x7586 <main+0x186>
    7584:	c0 c0       	rjmp	.+384    	; 0x7706 <main+0x306>
    7586:	01 15       	cp	r16, r1
    7588:	11 05       	cpc	r17, r1
    758a:	a1 f5       	brne	.+104    	; 0x75f4 <main+0x1f4>
    758c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <_edata>
    7590:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <_edata+0x1>
    7594:	30 93 85 01 	sts	0x0185, r19	; 0x800185 <_edata+0x85>
    7598:	20 93 84 01 	sts	0x0184, r18	; 0x800184 <_edata+0x84>
    759c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_edata+0x2>
    75a0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_edata+0x3>
    75a4:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <_edata+0x87>
    75a8:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <_edata+0x86>
    75ac:	40 91 18 01 	lds	r20, 0x0118	; 0x800118 <_edata+0x18>
    75b0:	50 91 19 01 	lds	r21, 0x0119	; 0x800119 <_edata+0x19>
    75b4:	50 93 89 01 	sts	0x0189, r21	; 0x800189 <_edata+0x89>
    75b8:	40 93 88 01 	sts	0x0188, r20	; 0x800188 <_edata+0x88>
    75bc:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <_edata+0x1a>
    75c0:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <_edata+0x1b>
    75c4:	50 93 8b 01 	sts	0x018B, r21	; 0x80018b <_edata+0x8b>
    75c8:	40 93 8a 01 	sts	0x018A, r20	; 0x80018a <_edata+0x8a>
    75cc:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <_edata+0x19>
    75d0:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <_edata+0x18>
    75d4:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <_edata+0x1b>
    75d8:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <_edata+0x1a>
    75dc:	4c e0       	ldi	r20, 0x0C	; 12
    75de:	54 e9       	ldi	r21, 0x94	; 148
    75e0:	50 93 01 01 	sts	0x0101, r21	; 0x800101 <_edata+0x1>
    75e4:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <_edata>
    75e8:	80 e0       	ldi	r24, 0x00	; 0
    75ea:	9a e3       	ldi	r25, 0x3A	; 58
    75ec:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
    75f0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
    75f4:	80 2f       	mov	r24, r16
    75f6:	20 e8       	ldi	r18, 0x80	; 128
    75f8:	20 0f       	add	r18, r16
    75fa:	e0 e0       	ldi	r30, 0x00	; 0
    75fc:	f1 e0       	ldi	r31, 0x01	; 1
    75fe:	11 bc       	out	0x21, r1	; 33
    7600:	90 81       	ld	r25, Z
    7602:	90 bd       	out	0x20, r25	; 32
    7604:	e1 bc       	out	0x21, r14	; 33
    7606:	91 81       	ldd	r25, Z+1	; 0x01
    7608:	90 bd       	out	0x20, r25	; 32
    760a:	f1 bc       	out	0x21, r15	; 33
    760c:	92 81       	ldd	r25, Z+2	; 0x02
    760e:	90 bd       	out	0x20, r25	; 32
    7610:	71 bc       	out	0x21, r7	; 33
    7612:	93 81       	ldd	r25, Z+3	; 0x03
    7614:	90 bd       	out	0x20, r25	; 32
    7616:	81 bd       	out	0x21, r24	; 33
    7618:	cf ba       	out	0x1f, r12	; 31
    761a:	df ba       	out	0x1f, r13	; 31
    761c:	34 96       	adiw	r30, 0x04	; 4
    761e:	8c 5f       	subi	r24, 0xFC	; 252
    7620:	28 13       	cpse	r18, r24
    7622:	ed cf       	rjmp	.-38     	; 0x75fe <main+0x1fe>
    7624:	56 cf       	rjmp	.-340    	; 0x74d2 <main+0xd2>
    7626:	ba d0       	rcall	.+372    	; 0x779c <getch>
    7628:	88 2e       	mov	r8, r24
    762a:	91 2c       	mov	r9, r1
    762c:	98 2c       	mov	r9, r8
    762e:	88 24       	eor	r8, r8
    7630:	b5 d0       	rcall	.+362    	; 0x779c <getch>
    7632:	88 0e       	add	r8, r24
    7634:	91 1c       	adc	r9, r1
    7636:	b2 d0       	rcall	.+356    	; 0x779c <getch>
    7638:	c8 2f       	mov	r28, r24
    763a:	bc d0       	rcall	.+376    	; 0x77b4 <verifySpace>
    763c:	c5 34       	cpi	r28, 0x45	; 69
    763e:	99 f1       	breq	.+102    	; 0x76a6 <main+0x2a6>
    7640:	54 01       	movw	r10, r8
    7642:	e8 01       	movw	r28, r16
    7644:	0a c0       	rjmp	.+20     	; 0x765a <main+0x25a>
    7646:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <_edata+0x84>
    764a:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <_edata+0x85>
    764e:	21 96       	adiw	r28, 0x01	; 1
    7650:	9e d0       	rcall	.+316    	; 0x778e <putch>
    7652:	f1 e0       	ldi	r31, 0x01	; 1
    7654:	af 1a       	sub	r10, r31
    7656:	b1 08       	sbc	r11, r1
    7658:	c1 f1       	breq	.+112    	; 0x76ca <main+0x2ca>
    765a:	20 97       	sbiw	r28, 0x00	; 0
    765c:	a1 f3       	breq	.-24     	; 0x7646 <main+0x246>
    765e:	c1 30       	cpi	r28, 0x01	; 1
    7660:	d1 05       	cpc	r29, r1
    7662:	d9 f0       	breq	.+54     	; 0x769a <main+0x29a>
    7664:	c2 30       	cpi	r28, 0x02	; 2
    7666:	d1 05       	cpc	r29, r1
    7668:	09 f4       	brne	.+2      	; 0x766c <main+0x26c>
    766a:	3a c0       	rjmp	.+116    	; 0x76e0 <main+0x2e0>
    766c:	c3 30       	cpi	r28, 0x03	; 3
    766e:	d1 05       	cpc	r29, r1
    7670:	09 f4       	brne	.+2      	; 0x7674 <main+0x274>
    7672:	3e c0       	rjmp	.+124    	; 0x76f0 <main+0x2f0>
    7674:	c8 31       	cpi	r28, 0x18	; 24
    7676:	d1 05       	cpc	r29, r1
    7678:	09 f4       	brne	.+2      	; 0x767c <main+0x27c>
    767a:	40 c0       	rjmp	.+128    	; 0x76fc <main+0x2fc>
    767c:	c9 31       	cpi	r28, 0x19	; 25
    767e:	d1 05       	cpc	r29, r1
    7680:	09 f4       	brne	.+2      	; 0x7684 <main+0x284>
    7682:	58 c0       	rjmp	.+176    	; 0x7734 <main+0x334>
    7684:	ca 31       	cpi	r28, 0x1A	; 26
    7686:	d1 05       	cpc	r29, r1
    7688:	09 f4       	brne	.+2      	; 0x768c <main+0x28c>
    768a:	5a c0       	rjmp	.+180    	; 0x7740 <main+0x340>
    768c:	cb 31       	cpi	r28, 0x1B	; 27
    768e:	d1 05       	cpc	r29, r1
    7690:	09 f4       	brne	.+2      	; 0x7694 <main+0x294>
    7692:	72 c0       	rjmp	.+228    	; 0x7778 <main+0x378>
    7694:	fe 01       	movw	r30, r28
    7696:	84 91       	lpm	r24, Z
    7698:	da cf       	rjmp	.-76     	; 0x764e <main+0x24e>
    769a:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <_edata+0x84>
    769e:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <_edata+0x85>
    76a2:	89 2f       	mov	r24, r25
    76a4:	d4 cf       	rjmp	.-88     	; 0x764e <main+0x24e>
    76a6:	60 2e       	mov	r6, r16
    76a8:	54 01       	movw	r10, r8
    76aa:	e8 01       	movw	r28, r16
    76ac:	21 96       	adiw	r28, 0x01	; 1
    76ae:	61 bc       	out	0x21, r6	; 33
    76b0:	d2 bd       	out	0x22, r29	; 34
    76b2:	ef ba       	out	0x1f, r14	; 31
    76b4:	00 00       	nop
    76b6:	00 00       	nop
    76b8:	80 b5       	in	r24, 0x20	; 32
    76ba:	69 d0       	rcall	.+210    	; 0x778e <putch>
    76bc:	e1 e0       	ldi	r30, 0x01	; 1
    76be:	ae 1a       	sub	r10, r30
    76c0:	b1 08       	sbc	r11, r1
    76c2:	63 94       	inc	r6
    76c4:	a1 14       	cp	r10, r1
    76c6:	b1 04       	cpc	r11, r1
    76c8:	89 f7       	brne	.-30     	; 0x76ac <main+0x2ac>
    76ca:	08 0d       	add	r16, r8
    76cc:	19 1d       	adc	r17, r9
    76ce:	01 cf       	rjmp	.-510    	; 0x74d2 <main+0xd2>
    76d0:	71 d0       	rcall	.+226    	; 0x77b4 <verifySpace>
    76d2:	8e e1       	ldi	r24, 0x1E	; 30
    76d4:	5c d0       	rcall	.+184    	; 0x778e <putch>
    76d6:	85 e9       	ldi	r24, 0x95	; 149
    76d8:	5a d0       	rcall	.+180    	; 0x778e <putch>
    76da:	8f e0       	ldi	r24, 0x0F	; 15
    76dc:	58 d0       	rcall	.+176    	; 0x778e <putch>
    76de:	f9 ce       	rjmp	.-526    	; 0x74d2 <main+0xd2>
    76e0:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <_edata+0x86>
    76e4:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <_edata+0x87>
    76e8:	b2 cf       	rjmp	.-156    	; 0x764e <main+0x24e>
    76ea:	85 e0       	ldi	r24, 0x05	; 5
    76ec:	50 d0       	rcall	.+160    	; 0x778e <putch>
    76ee:	f1 ce       	rjmp	.-542    	; 0x74d2 <main+0xd2>
    76f0:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <_edata+0x86>
    76f4:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <_edata+0x87>
    76f8:	89 2f       	mov	r24, r25
    76fa:	a9 cf       	rjmp	.-174    	; 0x764e <main+0x24e>
    76fc:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <_edata+0x88>
    7700:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <_edata+0x89>
    7704:	a4 cf       	rjmp	.-184    	; 0x764e <main+0x24e>
    7706:	81 14       	cp	r8, r1
    7708:	91 04       	cpc	r9, r1
    770a:	09 f4       	brne	.+2      	; 0x770e <main+0x30e>
    770c:	e2 ce       	rjmp	.-572    	; 0x74d2 <main+0xd2>
    770e:	80 2f       	mov	r24, r16
    7710:	80 0e       	add	r8, r16
    7712:	91 1e       	adc	r9, r17
    7714:	e0 e0       	ldi	r30, 0x00	; 0
    7716:	f1 e0       	ldi	r31, 0x01	; 1
    7718:	24 e0       	ldi	r18, 0x04	; 4
    771a:	0f 5f       	subi	r16, 0xFF	; 255
    771c:	1f 4f       	sbci	r17, 0xFF	; 255
    771e:	81 bd       	out	0x21, r24	; 33
    7720:	12 bd       	out	0x22, r17	; 34
    7722:	91 91       	ld	r25, Z+
    7724:	90 bd       	out	0x20, r25	; 32
    7726:	2f bb       	out	0x1f, r18	; 31
    7728:	ff ba       	out	0x1f, r15	; 31
    772a:	8f 5f       	subi	r24, 0xFF	; 255
    772c:	80 16       	cp	r8, r16
    772e:	91 06       	cpc	r9, r17
    7730:	a1 f7       	brne	.-24     	; 0x771a <main+0x31a>
    7732:	cf ce       	rjmp	.-610    	; 0x74d2 <main+0xd2>
    7734:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <_edata+0x88>
    7738:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <_edata+0x89>
    773c:	89 2f       	mov	r24, r25
    773e:	87 cf       	rjmp	.-242    	; 0x764e <main+0x24e>
    7740:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <_edata+0x8a>
    7744:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <_edata+0x8b>
    7748:	82 cf       	rjmp	.-252    	; 0x764e <main+0x24e>
    774a:	21 e0       	ldi	r18, 0x01	; 1
    774c:	30 e0       	ldi	r19, 0x00	; 0
    774e:	40 e0       	ldi	r20, 0x00	; 0
    7750:	50 e0       	ldi	r21, 0x00	; 0
    7752:	04 c0       	rjmp	.+8      	; 0x775c <main+0x35c>
    7754:	22 0f       	add	r18, r18
    7756:	33 1f       	adc	r19, r19
    7758:	44 1f       	adc	r20, r20
    775a:	55 1f       	adc	r21, r21
    775c:	8a 95       	dec	r24
    775e:	d2 f7       	brpl	.-12     	; 0x7754 <main+0x354>
    7760:	22 2a       	or	r2, r18
    7762:	33 2a       	or	r3, r19
    7764:	44 2a       	or	r4, r20
    7766:	55 2a       	or	r5, r21
    7768:	84 e9       	ldi	r24, 0x94	; 148
    776a:	8f bb       	out	0x1f, r24	; 31
    776c:	82 e9       	ldi	r24, 0x92	; 146
    776e:	8f bb       	out	0x1f, r24	; 31
    7770:	00 00       	nop
    7772:	00 00       	nop
    7774:	1f d0       	rcall	.+62     	; 0x77b4 <verifySpace>
    7776:	07 cf       	rjmp	.-498    	; 0x7586 <main+0x186>
    7778:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <_edata+0x8a>
    777c:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <_edata+0x8b>
    7780:	89 2f       	mov	r24, r25
    7782:	65 cf       	rjmp	.-310    	; 0x764e <main+0x24e>
    7784:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <__TEXT_REGION_LENGTH__+0x7e0066>
    7788:	4e ce       	rjmp	.-868    	; 0x7426 <main+0x26>
    778a:	27 d0       	rcall	.+78     	; 0x77da <appStart>
    778c:	42 ce       	rjmp	.-892    	; 0x7412 <main+0x12>

0000778e <putch>:
	}
}

void putch(char ch) {
#ifndef SOFT_UART
	while (!(UART_SRA & _BV(UDRE0)));
    778e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    7792:	95 ff       	sbrs	r25, 5
    7794:	fc cf       	rjmp	.-8      	; 0x778e <putch>
	UART_UDR = ch;
    7796:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    779a:	08 95       	ret

0000779c <getch>:
			[uartBit] "I" (UART_RX_BIT)
			:
				"r25"
					);
#else
	while(!(UART_SRA & _BV(RXC0)))
    779c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    77a0:	87 ff       	sbrs	r24, 7
    77a2:	fc cf       	rjmp	.-8      	; 0x779c <getch>
		;
	if (!(UART_SRA & _BV(FE0))) {
    77a4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    77a8:	84 fd       	sbrc	r24, 4
    77aa:	01 c0       	rjmp	.+2      	; 0x77ae <getch+0x12>
}
#endif

// Watchdog functions. These are only safe with interrupts turned off.
static void watchdogReset() {
	__asm__ __volatile__ (
    77ac:	a8 95       	wdr
		 * don't care that an invalid char is returned...)
		 */
		watchdogReset();
	}

	ch = UART_UDR;
    77ae:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
#ifdef LED_DATA_FLASH
	LED_PORT ^= _BV(LED);
#endif

	return ch;
}
    77b2:	08 95       	ret

000077b4 <verifySpace>:
	do getch(); while (--count);
	verifySpace();
}

static void verifySpace() {
	if (getch() != CRC_EOP) {
    77b4:	f3 df       	rcall	.-26     	; 0x779c <getch>
    77b6:	80 32       	cpi	r24, 0x20	; 32
    77b8:	39 f0       	breq	.+14     	; 0x77c8 <verifySpace+0x14>
			);
}

void watchdogConfig(uint8_t x) {
#if 1
	WDTCSR = _BV(WDCE) | _BV(WDE);
    77ba:	88 e1       	ldi	r24, 0x18	; 24
    77bc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
	WDTCSR = x;
    77c0:	8d e0       	ldi	r24, 0x0D	; 13
    77c2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    77c6:	ff cf       	rjmp	.-2      	; 0x77c6 <verifySpace+0x12>
	if (getch() != CRC_EOP) {
		watchdogConfig(WATCHDOG_32MS);    // shorten WD timeout
		while (1)			      // and busy-loop so that WD causes
			;				      //  a reset and app start.
	}
	putch(STK_INSYNC);
    77c8:	84 e1       	ldi	r24, 0x14	; 20
    77ca:	e1 cf       	rjmp	.-62     	; 0x778e <putch>

000077cc <getNch>:
			::[count] "M" (UART_B_VALUE)
			);
}
#endif

static void getNch(uint8_t count) {
    77cc:	cf 93       	push	r28
	do getch(); while (--count);
    77ce:	c8 2f       	mov	r28, r24
    77d0:	e5 df       	rcall	.-54     	; 0x779c <getch>
    77d2:	c1 50       	subi	r28, 0x01	; 1
	verifySpace();
}
    77d4:	e9 f7       	brne	.-6      	; 0x77d0 <getNch+0x4>
}
#endif

static void getNch(uint8_t count) {
	do getch(); while (--count);
	verifySpace();
    77d6:	cf 91       	pop	r28
    77d8:	ed cf       	rjmp	.-38     	; 0x77b4 <verifySpace>

000077da <appStart>:
			);
}

void watchdogConfig(uint8_t x) {
#if 1
	WDTCSR = _BV(WDCE) | _BV(WDE);
    77da:	e0 e6       	ldi	r30, 0x60	; 96
    77dc:	f0 e0       	ldi	r31, 0x00	; 0
    77de:	98 e1       	ldi	r25, 0x18	; 24
    77e0:	90 83       	st	Z, r25
	WDTCSR = x;
    77e2:	10 82       	st	Z, r1
static void appStart(uint8_t rstFlags) {
	watchdogConfig(WATCHDOG_OFF);
	// save the reset flags in the designated register
	//  This can be saved in a main program by putting code in .init0 (which
	//  executes before normal c init code) to save R2 to a global variable.
	__asm__ __volatile__ ("mov r2, %0\n" :: "r" (rstFlags));
    77e4:	28 2e       	mov	r2, r24

	__asm__ __volatile__ (
    77e6:	ec e0       	ldi	r30, 0x0C	; 12
    77e8:	ff 27       	eor	r31, r31
    77ea:	09 94       	ijmp
